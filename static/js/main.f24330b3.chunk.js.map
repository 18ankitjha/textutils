{"version":3,"sources":["components/Navbar.jsx","components/Textform.jsx","components/About.jsx","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","_useState2","Object","slicedToArray","modecontent","setmodecontent","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","style","height","width","cursor","role","htmlFor","Textform","text","setText","countword","words","split","length","charAt","Fragment","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","About","myStyle","border","borderColor","aria-labelledby","data-bs-parent","defaultProps","Alert","alert","word","lower","slice","captilaze","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","cls","body","classList","remove","add","components_Alert","react_router","path","element","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f24330b3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  const [modecontent, setmodecontent] = useState(\"Enable Dark Mode\");\r\n  const modecall = () => {\r\n    if (props.mode === 'light') {\r\n      setmodecontent(\"Enable Light Mode\")\r\n    }\r\n    else {\r\n      setmodecontent(\"Enable Dark Mode\")\r\n    }\r\n    props.toggleMode(null);\r\n\r\n  }\r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n\r\n          </ul>\r\n          <div className=\"d-flex\">\r\n            <div className=\"bg-primary rounded mx-2\" onClick={()=>props.toggleMode('primary')} style={{height:'30px',width:'30px',cursor:'pointer'}} ></div>\r\n            <div className=\"bg-danger rounded mx-2\" onClick={()=>props.toggleMode('danger')} style={{height:'30px',width:'30px',cursor:'pointer'}} ></div>\r\n            <div className=\"bg-success rounded mx-2\" onClick={()=>props.toggleMode('success')} style={{height:'30px',width:'30px',cursor:'pointer'}} ></div>\r\n            <div className=\"bg-warning rounded mx-2\" onClick={()=>props.toggleMode('warning')} style={{height:'30px',width:'30px',cursor:'pointer'}} ></div>\r\n          </div>\r\n\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={modecall} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{modecontent}</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Set the title',\r\n  aboutText: 'Set about us'\r\n} ","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text,setText]=useState('')\r\n    const handleUpClick= ()=>{\r\n        let newText=text.toUpperCase();\r\n        // console.log(\"UpperCase is clicked \")\r\n        setText(newText)\r\n        props.showAlert(\" Converted to upper Case\",\"success\")\r\n        \r\n    }\r\n    const handleLowerCase= ()=>{\r\n        let newText=text.toLowerCase();\r\n        // console.log(\"UpperCase is clicked \")\r\n        setText(newText)\r\n        props.showAlert(\" Converted to lower Case\",\"success\")\r\n    }\r\n    const handleclear= ()=>{\r\n        // let newText='';\r\n        // console.log(\"UpperCase is clicked \")\r\n        setText('')\r\n        props.showAlert(\" Text cleared\",\"success\")\r\n    }\r\n    const handleOnChange= (event)=>{\r\n        // console.log(\"function is clicked\")\r\n        setText(event.target.value )\r\n    }\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById('myBox');\r\n        props.showAlert(\" Text copied\",\"success\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    \r\n    function countword(words){\r\n        \r\n        if(words.split(' ').length===1 && words.charAt(0)===''){\r\n            return 0;\r\n        }\r\n        else if(words.charAt(words.length-1)===' '){\r\n            return words.split(' ').length-1;\r\n        }\r\n        return words.split(/\\s/).length;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n           <div className=\"container\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#97b2c1',color:props.mode==='dark'?'white':'black'}}></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleUpClick}>\r\n                    Convert to uppercase\r\n                </button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3\" onClick={handleLowerCase}>\r\n                    Convert to LowerCase\r\n                </button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleclear}>\r\n                    Clear\r\n                </button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleCopy}>\r\n                    Copy\r\n                </button>\r\n           </div>\r\n\r\n            <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{countword(text)} words and {text.length} characters</p>\r\n                <p>{0.008*countword(text)} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?0:'Nothing to read'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setmyStyle] = useState(\r\n  //   {\r\n  //     color:'black',\r\n  //     backgroundColor:'white'\r\n  //   }\r\n  // )\r\n\r\n  // const [Buttonstate, setButtonstate] = useState('Enable Dark Mode')\r\n  let myStyle={\r\n    color:props.mode==='dark'?'white':'#042743',\r\n    backgroundColor:props.mode==='dark'?'#042743':'white',\r\n    border:'1px solid',\r\n    borderColor:props.mode==='dark'?'white':'#042743'\r\n    \r\n  }\r\n\r\n  // const  toggleStyle=()=>{\r\n  //   if(props.mode=== 'light'){\r\n  //     setmyStyle({\r\n  //       color:'black',\r\n  //       backgroundColor:'white',\r\n  //       border:'1px solid white'\r\n  //     })\r\n  //     // setButtonstate('Enable Dark Mode');\r\n  //   }\r\n  //   else{\r\n  //     setmyStyle({\r\n  //       color:'white',\r\n  //       backgroundColor:'black'\r\n  //     })\r\n  //     // setButtonstate('Enable Light Mode');\r\n  //   }\r\n  // }\r\n  \r\n  return (\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n      <h2>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n              <strong>Analyze your text</strong> \r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is text analyzer.</strong> You can analyze your text here. If you want you can include new functionalities in by giving it a pull request , \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n             <strong>Help in your assignment</strong> \r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>Assignments</strong> You can use it to edit your text which will Help in your assignment. This is not final version of this software <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n               <strong>Free to use</strong>\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>0 charge</strong> This software is free to use. You can use it for your personal use. You can also use it for your commercial use.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n\r\n      {/* <button type='button'  style={myStyle} className='btn btn-primary my-2' onClick={toggleStyle} >{Buttonstate}</button> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const captilaze = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n\r\n    <div style={{ height: '50px' }}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{captilaze(props.alert.type)}</strong>{props.alert.msg}\r\n\r\n\r\n\r\n      </div>\r\n    }\r\n    </div>\r\n    \r\n\r\n\r\n  )\r\n}\r\nexport default Alert","// import logo from './logo.svg';\nimport React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  // Switch,\n  Route,\n  // Link,\n  Routes\n} from \"react-router-dom\";\n// import { Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-primary');\n  }\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    if (cls === 'warning' || cls === 'danger' || cls==='success' || cls==='primary') {\n      document.body.classList.add('bg-' + cls)\n    }\n    else {\n      if (mode === 'light') {\n        showAlert(\" Dark Mode has been enabled\", \"success\");\n        setMode('dark')\n        document.body.style.backgroundColor = '#042743';\n        document.title = 'Textutils-DarkMode'\n      }\n      else {\n        showAlert(\" Light Mode has been enabled\", \"success\");\n        document.body.style.backgroundColor = 'white';\n        setMode('light')\n        document.title = 'Textutils'\n\n      }\n    }\n  }\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" aboutText=\"About textutils\" mode={mode} toggleMode={toggleMode}></Navbar>\n        <Alert alert={alert}></Alert>\n        <div className=\"container my-3\">\n\n          <Routes>\n            <Route path=\"/\" element={< Textform heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />}>\n            </Route>\n            <Route exact path=\"/About\" element={<About mode={mode} />}>\n            </Route>\n          </Routes>\n\n\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}